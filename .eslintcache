[{"/Users/adimagori/Development/Coding Academy/myPlaylist/src/index.js":"1","/Users/adimagori/Development/Coding Academy/myPlaylist/src/reportWebVitals.js":"2","/Users/adimagori/Development/Coding Academy/myPlaylist/src/cmps/EmbeddedVideo.jsx":"3","/Users/adimagori/Development/Coding Academy/myPlaylist/src/cmps/VideoList.jsx":"4","/Users/adimagori/Development/Coding Academy/myPlaylist/src/cmps/VideoPreview.jsx":"5","/Users/adimagori/Development/Coding Academy/myPlaylist/src/App.jsx":"6","/Users/adimagori/Development/Coding Academy/myPlaylist/src/services/videoService.js":"7","/Users/adimagori/Development/Coding Academy/myPlaylist/src/services/storageService.js":"8","/Users/adimagori/Development/Coding Academy/myPlaylist/src/pages/VideoApp.jsx":"9"},{"size":511,"mtime":1612090387969,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1612019944435,"results":"12","hashOfConfig":"11"},{"size":560,"mtime":1612092779576,"results":"13","hashOfConfig":"11"},{"size":359,"mtime":1612092941472,"results":"14","hashOfConfig":"11"},{"size":539,"mtime":1612083568366,"results":"15","hashOfConfig":"11"},{"size":150,"mtime":1612091709535,"results":"16","hashOfConfig":"11"},{"size":809,"mtime":1612091449853,"results":"17","hashOfConfig":"11"},{"size":326,"mtime":1612089578678,"results":"18","hashOfConfig":"11"},{"size":1407,"mtime":1612092202752,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"fiipeg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/adimagori/Development/Coding Academy/myPlaylist/src/index.js",[],["42","43"],"/Users/adimagori/Development/Coding Academy/myPlaylist/src/reportWebVitals.js",[],"/Users/adimagori/Development/Coding Academy/myPlaylist/src/cmps/EmbeddedVideo.jsx",[],"/Users/adimagori/Development/Coding Academy/myPlaylist/src/cmps/VideoList.jsx",[],"/Users/adimagori/Development/Coding Academy/myPlaylist/src/cmps/VideoPreview.jsx",["44"],"import React from 'react'\n\nexport function VideoPreview({ video, setCurrVideo }) {\n    return (\n        <div className=\"video-preview flex\">\n            <img className=\"video-img\" src={video.snippet.thumbnails.default.url} />\n            <div className=\"video-content flex column\">\n                <h4>{video.snippet.title}</h4>\n                <p>{video.snippet.description}</p>\n\n            </div>\n            <button onClick={() => {\n                setCurrVideo(video)\n            }\n            } >Play</button>\n        </div>\n    )\n}\n","/Users/adimagori/Development/Coding Academy/myPlaylist/src/App.jsx",[],"/Users/adimagori/Development/Coding Academy/myPlaylist/src/services/videoService.js",[],"/Users/adimagori/Development/Coding Academy/myPlaylist/src/services/storageService.js",["45"],"'use strict';\nexport const storageService = {\n    loadFromStorage,\n    saveToStorage\n}\nfunction loadFromStorage(key) {\n    var json = localStorage.getItem(key)\n    var value = JSON.parse(json)\n    return value;\n}\nfunction saveToStorage(key, value) {\n    var json = JSON.stringify(value);\n    localStorage.setItem(key, json)\n}\n","/Users/adimagori/Development/Coding Academy/myPlaylist/src/pages/VideoApp.jsx",["46","47"],"import { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService.js'\nimport { useEffect, useState } from 'react';\nimport { EmbeddedVideo } from '../cmps/EmbeddedVideo';\n\nexport function VideoApp() {\n    const [keyword, setKeyword] = useState('')\n    const [video, setVideo] = useState('')\n    const setCurrVideo = (video) => {\n        setVideo(video)\n    }\n\n    const [videos, setVideos] = useState([])\n    useEffect(async () => {\n        const videoList = await loadVideos()\n        if (videoList.length) setCurrVideo(videoList[0])\n    }, [])\n\n    const loadVideos = async (ev = null) => {\n        if (ev)\n            ev.preventDefault();\n        const results = await videoService.query(keyword)\n        setVideos(results.items)\n\n        return results.items\n    }\n    return (\n        <section>\n            <header className=\"app-header\">\n                <h1>Youtube player</h1>\n                <form onSubmit={(ev) => loadVideos(ev)}>\n                    <input type=\"search\" value={keyword} placeholder=\"Search\" onChange={(ev) => setKeyword(ev.target.value)} />\n                    <button>Search</button>\n                </form>\n            </header>\n            <div className=\"video-app flex\">\n                <VideoList videos={videos} setCurrVideo={setCurrVideo} />\n                <EmbeddedVideo video={video} />\n            </div>\n        </section>\n    )\n}\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":6,"column":13,"nodeType":"54","endLine":6,"endColumn":85},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","messageId":"58","endLine":1,"endColumn":14,"fix":"59"},{"ruleId":"60","severity":1,"message":"61","line":14,"column":15,"nodeType":"62","endLine":17,"endColumn":6},{"ruleId":"60","severity":1,"message":"63","line":17,"column":8,"nodeType":"64","endLine":17,"endColumn":10,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"68","text":"69"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'loadVideos'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",[0,13],"",{"desc":"71","fix":"72"},"Update the dependencies array to be: [loadVideos]",{"range":"73","text":"74"},[577,579],"[loadVideos]"]