{"version":3,"sources":["cmps/VideoPreview.jsx","cmps/VideoList.jsx","services/storageService.js","services/videoService.js","cmps/EmbeddedVideo.jsx","pages/VideoApp.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["VideoPreview","video","setCurrVideo","className","src","snippet","thumbnails","default","url","title","description","onClick","VideoList","videos","map","id","videoId","storageService","loadFromStorage","key","json","localStorage","getItem","JSON","parse","saveToStorage","value","stringify","setItem","VIDEOS_KEY","KEYWORD_KEY","videoService","query","keyword","a","storageKeyword","axios","get","res","data","EmbeddedVideo","opts","height","width","playerVars","autoplay","onReady","event","target","pauseVideo","VideoApp","useState","setKeyword","setVideo","setVideos","useEffect","loadVideos","videoList","length","ev","preventDefault","results","items","onSubmit","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5946f44c.chunk.js","sourcesContent":["import React from 'react'\n\nexport function VideoPreview({ video, setCurrVideo }) {\n    return (\n        <div className=\"video-preview flex\">\n            <img className=\"video-img\" src={video.snippet.thumbnails.default.url} />\n            <div className=\"video-content flex column\">\n                <h4>{video.snippet.title}</h4>\n                <p>{video.snippet.description}</p>\n\n            </div>\n            <button onClick={() => {\n                setCurrVideo(video)\n            }\n            } >Play</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { VideoPreview } from './VideoPreview';\n\nexport function VideoList({ videos, setCurrVideo }) {\n\n\n    return (\n        <div className=\"video-list\">\n            {videos.map(video => {\n                return <VideoPreview key={video.id.videoId} video={video} setCurrVideo={setCurrVideo} />\n            })}\n        </div>\n    )\n}\n","'use strict';\nexport const storageService = {\n    loadFromStorage,\n    saveToStorage\n}\nfunction loadFromStorage(key) {\n    var json = localStorage.getItem(key)\n    var value = JSON.parse(json)\n    return value;\n}\nfunction saveToStorage(key, value) {\n    var json = JSON.stringify(value);\n    localStorage.setItem(key, json)\n}\n","import axios from \"axios\";\nimport { storageService } from './storageService.js'\n\nconst VIDEOS_KEY = 'video'\nconst KEYWORD_KEY = 'keyword'\n\n\nexport const videoService = {\n    query,\n}\n\nasync function query(keyword) {\n    var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n    if (keyword === '' && !storageKeyword) keyword = 'Angular'\n\n    if (keyword === storageKeyword || keyword === '') {\n        return storageService.loadFromStorage(VIDEOS_KEY)\n    }\n\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyA9krZ02aDNloGSkQmiwb-2XLuChoMHJh4`);\n    const videos = res.data;\n    storageService.saveToStorage(VIDEOS_KEY, videos)\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\n    return videos;\n}\n\n","import React from 'react'\nimport YouTube from 'react-youtube';\n\nexport function EmbeddedVideo({ video }) {\n\n    const opts = {\n        height: '490',\n        width: '100%',\n        playerVars: {\n            autoplay: 1,\n        },\n    }\n\n    const _onReady = (event) => {\n        event.target.pauseVideo();\n    }\n    if (!video) return <div>Loading..</div>\n    return (\n\n        <div className=\"video-player\">\n            <YouTube videoId={video.id.videoId} opts={opts} onReady={_onReady} />\n            <h1>{video.snippet.title}</h1>\n        </div >\n\n    )\n}\n","import { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService.js'\nimport { useEffect, useState } from 'react';\nimport { EmbeddedVideo } from '../cmps/EmbeddedVideo';\n\nexport function VideoApp() {\n    const [keyword, setKeyword] = useState('')\n    const [video, setVideo] = useState('')\n    const setCurrVideo = (video) => {\n        setVideo(video)\n    }\n\n    const [videos, setVideos] = useState([])\n    useEffect(async () => {\n        const videoList = await loadVideos()\n        if (videoList.length) setCurrVideo(videoList[0])\n    }, [])\n\n    const loadVideos = async (ev = null) => {\n        if (ev)\n            ev.preventDefault();\n        const results = await videoService.query(keyword)\n        setVideos(results.items)\n\n        return results.items\n    }\n    return (\n        <section>\n            <header className=\"app-header\">\n                <h1>Youtube player</h1>\n                <form onSubmit={(ev) => loadVideos(ev)}>\n                    <input type=\"search\" value={keyword} placeholder=\"Search\" onChange={(ev) => setKeyword(ev.target.value)} />\n                    <button>Search</button>\n                </form>\n            </header>\n            <div className=\"video-app flex\">\n                <VideoList videos={videos} setCurrVideo={setCurrVideo} />\n                <EmbeddedVideo video={video} />\n            </div>\n        </section>\n    )\n}\n","import { VideoApp } from './pages/VideoApp.jsx'\n\nexport function App() {\n\n  return (\n    <div className=\"App\">\n      <VideoApp />\n    </div>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.scss'\nimport { App } from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}